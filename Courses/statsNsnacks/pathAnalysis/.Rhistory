mydata.Day7.long <- melt(subset(mydata.Day7.C30, select = -c(Total)),
id.var= c("Treatment", "SamplingDate", "PlateDilution", "PictureDate.days.since.plating.", "TreatDateSampDilDays", "Replicate"))
mydata.Day7.long
mydata.Day7.long$value.log <- log(mydata.Day7.long$value, 10)
mydata.Day7.long <- mydata.Day7.long[ which(mydata.Day7.long$value.log!=-Inf),]
mydata.Day7.long.subset <- subset(mydata.Day7.long, variable == "Purple.wr.T" | variable == "Purple.S.T" | variable == "White.T")
cols <- c(White.T="white",Purple.S.T="lightgrey",
Purple.wr.T="#330066")
mydata.Day7.long.subset
plot <- ggplot(subset(mydata.Day7.long.subset), aes(x=SamplingDate, y=value.log, fill=variable)) +
geom_bar(stat="identity") + facet_grid(~Treatment) + theme_bw() +
ylab("Estimated cell count, log") +
xlab("Sampling data")
plot <- ggplot(subset(mydata.Day7.long.subset), aes(x=SamplingDate, y=value.log, fill=variable)) +
geom_bar(stat="identity") + facet_grid(~Treatment) + theme_bw() +
ylab("Estimated cell count, log") +
xlab("Sampling data")
plot + scale_fill_manual(values=c("lightgrey", "#990099", "#330066"),
name="Colony morphology",
breaks=c("White.T", "Purple.S.T", "Purple.wr.T"),
labels=c("White", "Smooth purple", "Wrinkly purple"))
mydata.Day7.long.subset
mydata.Day7.long.subset
mydata.Day7.long.subset
mydata.Day7.long.subset$Treatment==static
mydata.Day7.long.subset$Treatment==static
mydata.Day7.long.subset[mydata.Day7.long.subset$Treatment==static]
mydata.Day7.long.subset[which(mydata.Day7.long.subset$Treatment==static),]
mydata.Day7.long.subset[which(mydata.Day7.long.subset$Treatment=='static'),]
mydata.Day7.long.subset
mydata.Day7.long.subset
mydata.Day7.long
mydata.Day7.C30
mydata.Day7.C30
mydata.Day7.C30$White.R <- with(mydata.Day7.C30, (  (White * (PlateDilution==-5) *100000 + White * (PlateDilution==-6)*1000000 + White * (PlateDilution==-7)*10000000)) / Total.T  )
mydata.Day7.C30
mydata.Day7.C30$Purple.S.R <- with(mydata.Day7.C30, (  (Purple.S * (PlateDilution==-5) *100000 + Purple.S * (PlateDilution==-6)*1000000 + Purple.S * (PlateDilution==-7)*10000000))  /Total.T )
mydata.Day7.C30$Purple.wr.R <- with(mydata.Day7.C30, (  (Purple.wr * (PlateDilution==-5) *100000 + Purple.wr * (PlateDilution==-6)*1000000 + Purple.wr * (PlateDilution==-7)*10000000)) / Total.T )
mydata.Day7.long <- melt(subset(mydata.Day7.C30, select = -c(Total)),
id.var= c("Treatment", "SamplingDate", "PlateDilution", "PictureDate.days.since.plating.", "TreatDateSampDilDays", "Replicate"))
mydata.Day7.long
mydata.Day7.long$value.log <- log(mydata.Day7.long$value, 10)
mydata.Day7.long <- mydata.Day7.long[ which(mydata.Day7.long$value.log!=-Inf),]
mydata.Day7.long
mydata.Day7.C30 <- subset(mydata.Day7, mydata.Day7$Total >= 30)
mydata.Day7.Dil6 <- mydata.Day7.C30[ which(mydata.Day7.C30$PlateDilution==-6),]
mydata.Day7.Dil5 <- mydata.Day7.C30[ which(mydata.Day7.C30$PlateDilution==-5),]
mydata.Day7.Dil7 <- mydata.Day7.C30[ which(mydata.Day7.C30$PlateDilution==-7),]
mydata.Day7.C30.R <- mydata.Day7.C30
mydata.Day7.C30$Total.T <- with(mydata.Day7.C30, (Total * (PlateDilution==-5) *100000 + Total * (PlateDilution==-6)*1000000 + Total * (PlateDilution==-7)*10000000) )
mydata.Day7.C30$White.T <- with(mydata.Day7.C30, (White * (PlateDilution==-5) *100000 + White * (PlateDilution==-6)*1000000 + White * (PlateDilution==-7)*10000000) )
mydata.Day7.C30.R$White.R <- with(mydata.Day7.C30, (  (White * (PlateDilution==-5) *100000 + White * (PlateDilution==-6)*1000000 + White * (PlateDilution==-7)*10000000)) / Total.T  )
mydata.Day7.C30$Purple.S.T <- with(mydata.Day7.C30, (Purple.S * (PlateDilution==-5) *100000 + Purple.S * (PlateDilution==-6)*1000000 + Purple.S * (PlateDilution==-7)*10000000) )
mydata.Day7.C30.R$Purple.S.R <- with(mydata.Day7.C30, (  (Purple.S * (PlateDilution==-5) *100000 + Purple.S * (PlateDilution==-6)*1000000 + Purple.S * (PlateDilution==-7)*10000000))  /Total.T )
mydata.Day7.C30$Purple.wr.T <- with(mydata.Day7.C30, (Purple.wr * (PlateDilution==-5) *100000 + Purple.wr * (PlateDilution==-6)*1000000 + Purple.wr * (PlateDilution==-7)*10000000) )
mydata.Day7.C30.R$Purple.wr.R <- with(mydata.Day7.C30, (  (Purple.wr * (PlateDilution==-5) *100000 + Purple.wr * (PlateDilution==-6)*1000000 + Purple.wr * (PlateDilution==-7)*10000000)) / Total.T )
mydata.Day7.C30.R
mydata.Day7.long <- melt(subset(mydata.Day7.C30, select = -c(Total)),
id.var= c("Treatment", "SamplingDate", "PlateDilution", "PictureDate.days.since.plating.", "TreatDateSampDilDays", "Replicate"))
mydata.Day7.R.long <- melt(subset(mydata.Day7.C30.R, select = -c(Total)),
id.var= c("Treatment", "SamplingDate", "PlateDilution", "PictureDate.days.since.plating.", "TreatDateSampDilDays", "Replicate"))
mydata.Day7.R.long
mydata.Day7.R.long.subset <- subset(mydata.Day7.R.long, variable == "Purple.wr.T" | variable == "Purple.S.T" | variable == "White.T")
mydata.Day7.R.long.subset
mydata.Day7.R.long
mydata.Day7.R.long.subset <- subset(mydata.Day7.R.long, variable == "Purple.wr.R" | variable == "Purple.S.R" | variable == "White.R")
mydata.Day7.R.long.subset
cols.R <- c(White.R="white",Purple.S.R="lightgrey",
Purple.wr.R="#330066")
plot <- ggplot(subset(mydata.Day7.R.long.subset), aes(x=SamplingDate, y=value, fill=variable)) +
geom_bar(stat="identity") + facet_grid(~Treatment) + theme_bw() +
ylab("Relative abundance") +
xlab("Sampling data")
plot + scale_fill_manual(values=c("lightgrey", "#990099", "#330066"),
name="Colony morphology",
breaks=c("White.T", "Purple.S.T", "Purple.wr.T"),
labels=c("White", "Smooth purple", "Wrinkly purple"))
mydata.Day7.long.subset
mydata.Day7.R.long.subset
plot <- ggplot(subset(mydata.Day7.R.long.subset), aes(x=SamplingDate, y=value, fill=variable)) +
geom_bar(stat="identity") + facet_grid(~Treatment) + theme_bw() +
ylab("Relative abundance") +
xlab("Sampling data")
plot + scale_fill_manual(values=c("lightgrey", "#990099", "#330066"),
name="Colony morphology",
breaks=c("White.T", "Purple.S.T", "Purple.wr.T"),
labels=c("White", "Smooth purple", "Wrinkly purple"))
mydata.Day7.R.long.subset
plot <- ggplot(subset(mydata.Day7.R.long.subset), aes(x=SamplingDate, y=value, fill=variable)) +
geom_bar(stat="identity") + facet_grid(~Treatment) + theme_bw() +
ylab("Relative abundance") +
xlab("Sampling data")
plot
plot1 <- ggplot(subset(mydata.Day7.R.long.subset), aes(x=SamplingDate, y=value, fill=variable)) +
geom_bar(stat="identity") + facet_grid(~Treatment) + theme_bw() +
ylab("Relative abundance") +
xlab("Sampling data")
plot1
mydata.Day7.R.long.subset
mydata.Day7.R.long.subset
mydata.Day7.long
mydata.Day7.C30 <- subset(mydata.Day7, mydata.Day7$Total >= 30)
mydata.Day7.Dil6 <- mydata.Day7.C30[ which(mydata.Day7.C30$PlateDilution==-6),]
mydata.Day7.Dil5 <- mydata.Day7.C30[ which(mydata.Day7.C30$PlateDilution==-5),]
mydata.Day7.Dil7 <- mydata.Day7.C30[ which(mydata.Day7.C30$PlateDilution==-7),]
hist(mydata.Day7.Dil5$Total, breaks = 15)
hist(mydata.Day7.Dil6$Total, breaks = 15)
hist(mydata.Day7.Dil7$Total, breaks = 15)
mydata.Day7.C30.R <- mydata.Day7.C30
mydata.Day7.C30$Total.T <- with(mydata.Day7.C30, (Total * (PlateDilution==-5) *100000 + Total * (PlateDilution==-6)*1000000 + Total * (PlateDilution==-7)*10000000) )
mydata.Day7.C30$White.T <- with(mydata.Day7.C30, (White * (PlateDilution==-5) *100000 + White * (PlateDilution==-6)*1000000 + White * (PlateDilution==-7)*10000000) )
mydata.Day7.C30.R$White.R <- with(mydata.Day7.C30, (  (White * (PlateDilution==-5) *100000 + White * (PlateDilution==-6)*1000000 + White * (PlateDilution==-7)*10000000)) / Total.T  )
mydata.Day7.C30$Purple.S.T <- with(mydata.Day7.C30, (Purple.S * (PlateDilution==-5) *100000 + Purple.S * (PlateDilution==-6)*1000000 + Purple.S * (PlateDilution==-7)*10000000) )
mydata.Day7.C30.R$Purple.S.R <- with(mydata.Day7.C30, (  (Purple.S * (PlateDilution==-5) *100000 + Purple.S * (PlateDilution==-6)*1000000 + Purple.S * (PlateDilution==-7)*10000000))  /Total.T )
mydata.Day7.C30$Purple.wr.T <- with(mydata.Day7.C30, (Purple.wr * (PlateDilution==-5) *100000 + Purple.wr * (PlateDilution==-6)*1000000 + Purple.wr * (PlateDilution==-7)*10000000) )
mydata.Day7.C30.R$Purple.wr.R <- with(mydata.Day7.C30, (  (Purple.wr * (PlateDilution==-5) *100000 + Purple.wr * (PlateDilution==-6)*1000000 + Purple.wr * (PlateDilution==-7)*10000000)) / Total.T )
mydata.Day7.C30
mydata.Day7.long <- melt(subset(mydata.Day7.C30, select = -c(Total)),
id.var= c("Treatment", "SamplingDate", "PlateDilution", "PictureDate.days.since.plating.", "TreatDateSampDilDays", "Replicate"))
mydata.Day7.long
mydata.Day7.long.H <- mydata.Day7.long[ which(mydata.Day7.long$variable== 'H'),]
mydata.Day7.long.H
plot <- ggplot(subset(mydata.Day7.long.H), aes(x=SamplingDate, y=value, fill=variable)) +
geom_bar(stat="identity") + facet_grid(~Treatment) + theme_bw() +
ylab("Estimated cell count, log") +
xlab("Sampling data")
plot + scale_fill_manual(values=c("lightgrey", "#990099", "#330066"),
name="Colony morphology",
breaks=c("White.T", "Purple.S.T", "Purple.wr.T"),
labels=c("White", "Smooth purple", "Wrinkly purple"))
ggplot(mydata.Day7.long.H, aes(x=SamplingDate, y=value)) + geom_boxplot()
mydata.Day7.long.H
ggplot(mydata.Day7.long.H, aes(x=SamplingDate, y=value, fill=variable)) + geom_boxplot()
plot <- ggplot(subset(mydata.Day7.long.H), aes(x=SamplingDate, y=value, fill=Treatment)) +
ggplot(mydata.Day7.long.H, aes(x=SamplingDate, y=value, fill=Treatment)) + geom_boxplot()
mydata.Day7.long.H
ggplot(mydata.Day7.long.H, aes(x=TreatDateSampDilDays, y=value, fill=Treatment)) + geom_boxplot()
mydata.Day7.long$value.log <- log(mydata.Day7.long$value, 10)
mydata.Day7.long <- mydata.Day7.long[ which(mydata.Day7.long$value.log!=-Inf),]
mydata.Day7.long.subset <- subset(mydata.Day7.long, variable == "Purple.wr.T" | variable == "Purple.S.T" | variable == "White.T")
cols <- c(White.T="white",Purple.S.T="lightgrey",
Purple.wr.T="#330066")
plot <- ggplot(subset(mydata.Day7.long.subset), aes(x=SamplingDate, y=value.log, fill=variable)) +
geom_bar(stat="identity") + facet_grid(~Treatment) + theme_bw() +
ylab("Estimated cell count, log") +
xlab("Sampling data")
plot + scale_fill_manual(values=c("lightgrey", "#990099", "#330066"),
name="Colony morphology",
breaks=c("White.T", "Purple.S.T", "Purple.wr.T"),
labels=c("White", "Smooth purple", "Wrinkly purple"))
mydata.Day7.long.subset
ggplot(mydata.Day7.long.H, aes(x=TreatDateSampDilDays)) + geom_boxplot()
ggplot(mydata.Day7.long.H, aes(x=TreatDateSampDilDays, y=value)) + geom_boxplot()
ggplot(mydata.Day7.long.H, aes(x=TreatDateSampDilDays, y=value)) + geom_boxplot()
mydata.Day7.long.H
ggplot(mydata.Day7.long.H, aes(x=TreatDateSampDilDays, y=value)) + geom_boxplot() +
facet_grid(~Treatment) + theme_bw() +
ggplot(mydata.Day7.long.H, aes(x=TreatDateSampDilDays, y=value)) + geom_boxplot() +
facet_grid(~Treatment) + theme_bw()
ggplot(mydata.Day7.long.H, aes(x=TreatDateSampDilDays, y=value, fill=variable)) +
geom_boxplot() +
facet_grid(~Treatment) + theme_bw()
test <- ggplot(mydata.Day7.long.H, aes(x=SamplingDate, y=value, fill=variable)) +
geom_boxplot() +
facet_grid(~Treatment) + theme_bw()
test
test <- ggplot(subset(mydata.Day7.long.H), aes(x=SamplingDate, y=value, fill=variable)) +
geom_boxplot() +
facet_grid(~Treatment) + theme_bw()
test
plot <- ggplot(subset(mydata.Day7.long.H), aes(x=SamplingDate, y=value, fill=variable)) +
geom_boxplot(stat="identity") + facet_grid(~Treatment) + theme_bw() +
ylab("Estimated cell count, log") +
xlab("Sampling data")
plot
plot <- ggplot(subset(mydata.Day7.long.H), aes(x=SamplingDate, y=value, fill=variable)) +
geom_boxplot() + facet_grid(~Treatment) + theme_bw() +
ylab("Estimated cell count, log") +
xlab("Sampling data")
plot
p <- ggplot(mydata.Day7.long.H, aes(factor(SamplingDate), value))
p + geom_boxplot(aes(fill = factor(Treatment)))
mydata.Day7.long$value.log <- log(mydata.Day7.long$value, 10)
mydata.Day7.long <- mydata.Day7.long[ which(mydata.Day7.long$value.log!=-Inf),]
mydata.Day7.long
mydata.Day7.long.subset <- subset(mydata.Day7.long, variable == "Purple.wr.T" | variable == "Purple.S.T" | variable == "White.T")
mydata.Day7.long.subset
mydata.Day7.long.subset
mydata.Day7.long
mydata.Day7.long.total <- mydata.Day7.long[ which(mydata.Day7.long$variable == "Total.T"),]
mydata.Day7.long.subset
mydata.Day7.long.total
ggplot(data=mydata.Day7.long.total, aes(x=SamplingDate, y=value.log, group=Treatment, colour=Treatment)) +
geom_line() +
geom_point()
ggplot(data=mydata.Day7.long.total, aes(x=SamplingDate, y=value.log, group=Treatment, colour=Treatment)) +
geom_line(stat="identity") +
geom_point()
ggplot(mydata.Day7.long.total, aes(x=SamplingDate, y=value.log, colour=Treatment)) +
geom_errorbar(aes(ymin=value.log-se, ymax=value.log+se), width=.1) +
geom_line() +
geom_point()
ggplot(subset(mydata.Day7.long.total), aes(x=SamplingDate, y=value.log, colour=Treatment)) +
geom_errorbar(aes(ymin=value.log-se, ymax=value.log+se), width=.1) +
geom_line() +
geom_point()
ggplot(subset(mydata.Day7.long.total), aes(x=SamplingDate, y=value.log, colour=Treatment)) +
#geom_errorbar(aes(ymin=value.log-se, ymax=value.log+se), width=.1) +
geom_line() +
geom_point()
p <- ggplot(mydata.Day7.long.H, aes(factor(SamplingDate), value))
p + geom_boxplot(aes(fill = factor(Treatment)))
mydata.Day7.long.total
tgc <- summarySE(mydata.Day7.long.total[ which(mydata.Day7.long.total$PlateDilution == "-7"),],
measurevar="value.log", groupvars=c("Shaken","SamplingDate"))
tgc <- summarySE(mydata.Day7.long.total[ which(mydata.Day7.long.total$PlateDilution == "-7"),],
measurevar="value.log", groupvars=c("Treatment","SamplingDate"))
tgc
mydata.Day7.long.total
mydata.Day7.long.total
(mydata.Day7.long.total[ which(mydata.Day7.long.total$PlateDilution == "-7"),]
mydata.Day7.long.total[ which(mydata.Day7.long.total$PlateDilution == "-7"),]
mydata.Day7
p <- ggplot(mydata.Day7.long.H, aes(factor(SamplingDate), value))
p + geom_boxplot(aes(fill = factor(Treatment)))
p <- ggplot(mydata.Day7.long.H, aes(factor(SamplingDate), value))
p + geom_boxplot(aes(fill = factor(Treatment)))  + theme_bw()
p <- ggplot(mydata.Day7.long.H, aes(factor(SamplingDate), value)) +
geom_boxplot(aes(fill = factor(Treatment)))  + theme_bw() +
ylab("H") +
xlab("Sampling date")
p
p <- ggplot(mydata.Day7.long.H, aes(factor(SamplingDate), value)) +
geom_boxplot(aes(fill = factor(Treatment)))  + theme_bw() +
ylab("H") +
xlab("Sampling date")  +
scale_color_grey() + theme_classic()
p
p <- ggplot(mydata.Day7.long.H, aes(factor(SamplingDate), value)) +
geom_boxplot(aes(fill = factor(Treatment)))  + theme_bw() +
ylab("H") +
xlab("Sampling date")  +
scale_color_grey() + theme_classic()
p
p <- ggplot(mydata.Day7.long.H, aes(factor(SamplingDate), value)) +
geom_boxplot(aes(fill = factor(Treatment)))  + theme_bw() +
ylab("H") +
xlab("Sampling date")  +
scale_fill_brewer(palette="Dark2") +
scale_color_grey() + theme_classic()
p
q<-ggplot(mydata.Day7.long.H, aes(x=aes(factor(SamplingDate), y=H, color=Treatment)) +
geom_boxplot()
q
q<-ggplot(mydata.Day7.long.H, aes(factor(SamplingDate), y=H, color=Treatment)) +
geom_boxplot()
q
q<-ggplot(mydata.Day7.long.H,x = SamplingDate, y=H, color=Treatment) +
geom_boxplot()
q
mydata.Day7.long.H
q<-ggplot(mydata.Day7.long.H, aes(x=SamplingDate, y=H, color=Treatment)) +
geom_boxplot()
q
q<-ggplot(mydata.Day7.long.H, aes(factor(SamplingDate), value)) +
geom_boxplot()
q
q<-ggplot(mydata.Day7.long.H, aes(factor(SamplingDate), value), color = Treatment) +
geom_boxplot()
q
q<-ggplot(mydata.Day7.long.H, aes(factor(SamplingDate), value, color = Treatment)) +
geom_boxplot()
q
q<-ggplot(mydata.Day7.long.H, aes(factor(SamplingDate), value, color = Treatment)) +
geom_boxplot() + scale_color_grey() + theme_classic()
q
p <- ggplot(mydata.Day7.long.H, aes(factor(SamplingDate), value)) +
geom_boxplot(aes(fill = factor(Treatment)))  + theme_bw() +
ylab("H") +
xlab("Sampling date")  +
scale_fill_brewer(palette="Dark2") +
scale_color_grey() + theme_classic()
p
p <- ggplot(mydata.Day7.long.H, aes(factor(SamplingDate), value)) +
geom_boxplot(aes(fill = factor(Treatment)))  + theme_bw() +
ylab("H") +
xlab("Sampling date")  +
scale_fill_brewer(palette="Blues") +
scale_color_grey() + theme_classic()
p
p <- ggplot(mydata.Day7.long.H, aes((SamplingDate), value)) +
geom_boxplot(aes(fill = factor(Treatment)))  + theme_bw() +
ylab("H") +
xlab("Sampling date")  +
scale_fill_brewer(palette="Blues") +
scale_color_grey() + theme_classic()
p
p <- ggplot(mydata.Day7.long.H, aes(factor(SamplingDate), value)) +
geom_boxplot(aes(fill = factor(Treatment)))  + theme_bw() +
ylab("H") +
xlab("Sampling date")  +
scale_fill_brewer(palette="Blues") +
scale_color_grey() + theme_classic()
p
p <- ggplot(mydata.Day7.long.H, aes(factor(SamplingDate), value)) +
geom_boxplot(aes(fill = factor(Treatment)))  + theme_bw() +
ylab("H") +
xlab("Sampling date")  +
scale_fill_brewer(palette="Blues") +
scale_color_grey() + theme_classic() +
guides(fill=guide_legend(title=NULL))
p
mydata.Day7.long
mydata.Day7.long.total
tgc <- summarySE(mydata.Day7.long.total[ which(mydata.Day7.long.total$PlateDilution == "-7"),],
measurevar="value.log", groupvars=c("Treatment","SamplingDate"))
tgc
tgc7 <- summarySE(mydata.Day7.long.total[ which(mydata.Day7.long.total$PlateDilution == "-7"),],
measurevar="value.log", groupvars=c("Treatment","SamplingDate"))
tgc6 <- summarySE(mydata.Day7.long.total[ which(mydata.Day7.long.total$PlateDilution == "-6"),],
measurevar="value.log", groupvars=c("Treatment","SamplingDate"))
tgc6
tgc5 <- summarySE(mydata.Day7.long.total[ which(mydata.Day7.long.total$PlateDilution == "-5"),],
measurevar="value.log", groupvars=c("Treatment","SamplingDate"))
tg5
tgc5
tgc7
tgc6
mydata.Day7.long
mydata.Day7.long
mydata.Day7.C30
tgc6
ggplot(tgc6, aes(x=SamplingDate, y=value.log, colour=Treatment)) +
geom_errorbar(aes(ymin=value.log-se, ymax=value.log+se), width=.1) +
geom_line() +
geom_point()
tg7
tgc7
ggplot(tgc6, aes(x=SamplingDate, y=value.log, colour=Treatment)) +
geom_errorbar(aes(ymin=value.log-se, ymax=value.log+se), width=.1) +
geom_line() +
geom_point() +
ylab("Log(cell density)") +
xlab("Sampling date")  +
ggplot(tgc6, aes(x=SamplingDate, y=value.log, colour=Treatment)) +
geom_errorbar(aes(ymin=value.log-se, ymax=value.log+se), width=.1) +
geom_line() +
geom_point() +
ylab("Log(cell density)") +
xlab("Sampling date")
ggplot(tgc6, aes(x=SamplingDate, y=value.log, colour=Treatment)) +
geom_errorbar(aes(ymin=value.log-se, ymax=value.log+se), width=.1) +
geom_line() +
geom_point() +
ylab("Log(cell density)") +
xlab("Sampling date") +
scale_fill_brewer(palette="Blues") +
scale_color_grey() + theme_classic() +
guides(fill=guide_legend(title=NULL))
p
ggplot(tgc6, aes(x=SamplingDate, y=value.log, colour=Treatment)) +
geom_errorbar(aes(ymin=value.log-se, ymax=value.log+se), width=.1) +
geom_line() +
geom_point() +
ylab("Log(cell density)") +
xlab("Sampling date") +
scale_fill_brewer(palette="Blues") +
theme_classic() +
guides(fill=guide_legend(title=NULL))
ggplot(tgc6, aes(x=SamplingDate, y=value.log, colour=Treatment)) +
geom_errorbar(aes(ymin=value.log-se, ymax=value.log+se), width=.1) +
geom_line() +
geom_point() +
ylab("Log(cell density)") +
xlab("Sampling date") +
scale_fill_brewer(palette="Blues") +
ggplot(tgc6, aes(x=SamplingDate, y=value.log, colour=Treatment)) +
geom_errorbar(aes(ymin=value.log-se, ymax=value.log+se), width=.1) +
geom_line() +
geom_point() +
ylab("Log(cell density)") +
xlab("Sampling date") +
scale_fill_brewer(palette="Blues")
ggplot(tgc6, aes(x=SamplingDate, y=value.log, colour=Treatment)) +
geom_errorbar(aes(ymin=value.log-se, ymax=value.log+se), width=.1) +
geom_line() +
geom_point() +
ylab("Log(cell density)") +
xlab("Sampling date") +
scale_fill_brewer(palette="Blues") +
scale_color_grey() + theme_classic()
ggplot(tgc6, aes(x=SamplingDate, y=value.log, colour=Treatment)) +
geom_errorbar(aes(ymin=value.log-se, ymax=value.log+se), width=.1) +
geom_line() +
geom_point() +
ylab("Log10(cell density)") +
xlab("Sampling date") +
scale_fill_brewer(palette="Blues") +
scale_color_grey() + theme_classic()
rm(list=ls())
x <- 5
x
y <- "Briana"
y
# vectors
x1 <- c(5,4,3,2,1)
x1
y1 <- c("Briana", "Is", "Awesome")
y1
# lists
?list
# matrices (non-mixed sets of data)
x2 <- matrix(c(1,1,2,1,2,1,1,1,3),ncol=3, nrow=3)
x2
y2 <- matrix(c(rep("y",3),rep("n",2),"y"), ncol=2)
y2
# data frames (mixed sets of data)
# Height vs. Wingspan (Armspan)
my.dat <- data.frame( hgt <- c(67,73,74,63,64,70,67,65.5,72,63),
wng <- c(67,70.5,76,62,61,68,69,65.5,74,62) )
my.dat  #messy column names, let's fix it
plot(hgt ~ wng, data=my.dat)
plot(hgt ~ wng, data=my.dat, pch=16, col='navy', ylab="Height", xlab="Wingspan")
?names
?str
?is.numeric
?is.character
?is.matrix
?is.data.frame
?length
?dim
?rownames
?colnames
?levels
dim(y2)
length(x1)
is.numeric(x)
is.character(x)
library(car)
?chickwts
head(chickwts)
dim(chickwts)
str(chickwts)
names(chickwts)
# Let's start with the chickwts data
# perform visual diagnostics and data visualization (do this first, always)
qqnorm(chickwts$weight)
qqline(chickwts$weight)
hist(chickwts$weight, breaks=12)
plot(density(chickwts$weight))
# Shapiro-Wilk's test of normality
# if p-value >0.05 or 0.10 then normal
shapiro.test(chickwts$weight)
# Create a boxplot
qqline(chickwts$weight)
hist(chickwts$weight, breaks=12)
plot(density(chickwts$weight))
shapiro.test(chickwts$weight)
plot(weight ~ feed, data=chickwts)
?lm
wts1 <- lm(weight ~ feed, data=chickwts)
summary(wts1)
names(wts1)
names(summary(wts1))
anova(wts1)
rm(list = ls())
getwd()
setwd("~/github/PopGen/statsNsnacks/")
data<-read.csv("plankton.field.data.csv") # Read in the data.  Each row is a lake sampled in a particular year.
setwd("~/github/PopGen/statsNsnacks/pathAnalysis/")
data<-read.csv("plankton.field.data.csv") # Read in the data.  Each row is a lake sampled in a particular year.
data$Year=as.factor(data$Year) # Make sure R interprets "Year" as a factor, not a continuous variable
plot(data$D.size,data$M.prev)
plot(data$C.freq,data$M.prev)
plot(data$Refuge,data$D.size)
plot(data$D.size,data$C.freq)
plot(data$Refuge,data$C.freq)
library(lavaan)   # This is the package for sem (including path analysis)
install.packages("lavaan")
library(lavaan)   # This is the package for sem (including path analysis)
mod1 = 'M.prev ~ C.freq + D.size    # Define a hypothetical model.  Infection prevalence is driven by...
C.freq ~ D.size + Refuge            # Frequency of small spore predators is driven by...
D.size ~ Refuge'                    # Fish predation index is driven by...
mod1.fit = sem(mod1, data=data, estimator= "MLM")        # Choose the MLM robust estimator
summary(mod1.fit, standardized=TRUE, fit.measures=TRUE)  # Ask for standardized parameter estimates and model fit stats
mod1.fit = sem(mod1, data=data, test="bollen.stine", se="boot", bootstrap=1000) # Or alternatively, bootstrap
mod1.fit = sem(mod1, data=data, test="bollen.stine", se="boot", bootstrap=1000) # Or alternatively, bootstrap
summary(mod1.fit, standardized=TRUE, fit.measures=TRUE)
library(lavaan.survey)   # This is a handy package for clustered sample design
install.packages("lavaan.survey")
mod2 = 'M.prev ~ C.freq + D.size + Chaob2 + O.freq + Simpsons
Simpsons ~ O.freq + C.freq + P.freq
C.freq ~ D.size + Refuge + Chaob2
P.freq ~ D.size + Refuge + Chaob2
P.freq ~~ C.freq                          # ~~ means you are hypothesizing a correlation, not a causal effect
P.freq ~~ O.freq
C.freq ~~ O.freq
D.size ~~ Chaob2
D.size ~ Refuge'
mod2.est = sem(mod2, data=data, estimator= "MLM")
weighting = svydesign(ids = ~Lake, probs = ~1, data = data)     # Same lake sampled in different years may not be independent
mod2.fit = lavaan.survey(mod2.est, weighting, estimator = "MLM")
library(lavaan.survey)   # This is a handy package for clustered sample design
mod2.est = sem(mod2, data=data, estimator= "MLM")
weighting = svydesign(ids = ~Lake, probs = ~1, data = data)     # Same lake sampled in different years may not be independent
mod2.fit = lavaan.survey(mod2.est, weighting, estimator = "MLM")
summary(mod2.fit, standardized=TRUE, fit.measures=TRUE)
residuals(mod2.est)$cov
resid(mod2.est, type = "standardized")
# It can be useful to check out the residual covariance matrix.  Big values indicate important missing links.
# Try fiddling with this model structure and see what happens to model fit indices,
# parameter estimates, and the residual covariance matrix
